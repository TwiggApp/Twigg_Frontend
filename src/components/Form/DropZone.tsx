import { useCallback } from "react";
import { useDropzone } from "react-dropzone";

const PictureSvg = () => {
  return (
    <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
      <g clip-path="url(#clip0_467_475)">
        <path
          d="M32 4H4C3.46957 4 2.96086 4.21071 2.58579 4.58579C2.21071 4.96086 2 5.46957 2 6V30C2 30.5304 2.21071 31.0391 2.58579 31.4142C2.96086 31.7893 3.46957 32 4 32H32C32.5304 32 33.0391 31.7893 33.4142 31.4142C33.7893 31.0391 34 30.5304 34 30V6C34 5.46957 33.7893 4.96086 33.4142 4.58579C33.0391 4.21071 32.5304 4 32 4ZM4 30V6H32V30H4Z"
          fill="#555555"
        />
        <path
          d="M8.91992 14C9.51327 14 10.0933 13.8241 10.5866 13.4944C11.08 13.1648 11.4645 12.6962 11.6916 12.1481C11.9186 11.5999 11.978 10.9967 11.8623 10.4147C11.7465 9.83279 11.4608 9.29824 11.0412 8.87868C10.6217 8.45912 10.0871 8.1734 9.50519 8.05765C8.92325 7.94189 8.32005 8.0013 7.77187 8.22836C7.22369 8.45543 6.75516 8.83994 6.42551 9.33329C6.09587 9.82664 5.91992 10.4067 5.91992 11C5.91992 11.7957 6.23599 12.5587 6.7986 13.1213C7.36121 13.6839 8.12427 14 8.91992 14ZM8.91992 9.4C9.23679 9.39802 9.54711 9.49017 9.81154 9.66478C10.076 9.83938 10.2826 10.0886 10.4052 10.3807C10.5279 10.6729 10.561 10.9949 10.5004 11.306C10.4398 11.617 10.2882 11.903 10.0648 12.1278C9.84147 12.3526 9.5564 12.5059 9.24576 12.5685C8.93512 12.631 8.61291 12.5999 8.31996 12.4791C8.02702 12.3583 7.77654 12.1533 7.60028 11.8899C7.42402 11.6266 7.32993 11.3169 7.32992 11C7.33254 10.5791 7.5009 10.1762 7.79852 9.8786C8.09614 9.58098 8.49904 9.41262 8.91992 9.41V9.4Z"
          fill="#555555"
        />
        <path
          d="M22.7799 15.37L17.3799 20.77L13.3799 16.77C13.1926 16.5838 12.9391 16.4792 12.6749 16.4792C12.4107 16.4792 12.1573 16.5838 11.9699 16.77L5.91992 22.9V25.73L12.7099 18.94L15.9999 22.18L12.2499 25.93H14.9999L23.4499 17.48L29.9999 24V21.18L24.1899 15.37C24.0026 15.1838 23.7491 15.0792 23.4849 15.0792C23.2207 15.0792 22.9673 15.1838 22.7799 15.37Z"
          fill="#555555"
        />
      </g>
      <defs>
        <clipPath id="clip0_467_475">
          <rect width="36" height="36" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

const CloseSvg = () => {
  return (
    <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M12.892 0.302021C12.7995 0.209317 12.6896 0.135769 12.5686 0.085588C12.4477 0.0354065 12.318 0.00957632 12.187 0.00957632C12.0561 0.00957632 11.9264 0.0354065 11.8054 0.085588C11.6844 0.135769 11.5745 0.209317 11.482 0.302021L6.59202 5.18202L1.70202 0.29202C1.60944 0.199438 1.49953 0.125998 1.37856 0.0758934C1.2576 0.0257884 1.12795 9.75509e-10 0.997021 0C0.86609 -9.75509e-10 0.736441 0.0257884 0.615477 0.0758934C0.494513 0.125998 0.384602 0.199438 0.29202 0.29202C0.199438 0.384602 0.125998 0.494513 0.0758934 0.615477C0.0257884 0.736441 -9.75509e-10 0.86609 0 0.997021C9.75509e-10 1.12795 0.0257884 1.2576 0.0758934 1.37856C0.125998 1.49953 0.199438 1.60944 0.29202 1.70202L5.18202 6.59202L0.29202 11.482C0.199438 11.5746 0.125998 11.6845 0.0758934 11.8055C0.0257884 11.9264 0 12.0561 0 12.187C0 12.318 0.0257884 12.4476 0.0758934 12.5686C0.125998 12.6895 0.199438 12.7994 0.29202 12.892C0.384602 12.9846 0.494513 13.058 0.615477 13.1081C0.736441 13.1583 0.86609 13.184 0.997021 13.184C1.12795 13.184 1.2576 13.1583 1.37856 13.1081C1.49953 13.058 1.60944 12.9846 1.70202 12.892L6.59202 8.00202L11.482 12.892C11.5746 12.9846 11.6845 13.058 11.8055 13.1081C11.9264 13.1583 12.0561 13.184 12.187 13.184C12.318 13.184 12.4476 13.1583 12.5686 13.1081C12.6895 13.058 12.7994 12.9846 12.892 12.892C12.9846 12.7994 13.058 12.6895 13.1081 12.5686C13.1583 12.4476 13.184 12.318 13.184 12.187C13.184 12.0561 13.1583 11.9264 13.1081 11.8055C13.058 11.6845 12.9846 11.5746 12.892 11.482L8.00202 6.59202L12.892 1.70202C13.272 1.32202 13.272 0.682021 12.892 0.302021Z"
        fill="#2B6C57"
      />
    </svg>
  );
};

interface DropZoneProps {
  file: string | null;
  onFileChange: (value: string) => void;
  error?: string;
  onFocus?: () => void;
}

export default function DropZone({ file, error, onFileChange, onFocus }: DropZoneProps) {
  const onDrop = useCallback(
    (acceptedFiles: File[]) => {
      const reader = new FileReader();
      reader.onload = (event) => {
        onFileChange(event.target?.result as string);
      };
      reader.readAsDataURL(acceptedFiles[0]);
      onFocus && onFocus();
    },
    [onFileChange, onFocus]
  );

  const { getInputProps, getRootProps, isDragActive } = useDropzone({ onDrop });

  return (
    <div
      className={`w-[100%] h-[150px] border-[2px] ${
        error ? "border-red-500" : "border-[#D6D6D6]"
      } border-dashed rounded-md cursor-pointer`}
    >
      {file ? (
        <div className="relative w-[100%] h-[100%] overflow-hidden">
          <div
            className="w-[40px] h-[40px] rounded-full absolute top-2 right-2 bg-gray-100 shadow-lg flex items-center justify-center"
            onClick={() => onFileChange("")}
          >
            <CloseSvg />
          </div>
          <img src={file} alt="img" className="w-[100%] h-[100%] object-cover" />
        </div>
      ) : (
        <div
          className="min-w-[100%] h-[100%] p-4 flex items-center justify-center"
          {...getRootProps()}
        >
          <input {...getInputProps()} />
          {isDragActive ? (
            <p className="font-nunito">Drop the image here</p>
          ) : (
            <div className="w-full h-full flex flex-col items-center justify-center">
              <PictureSvg />
              <h1 className="font-nunito text-[18px] mt-4">Drop your image here</h1>
              <p className="font-nunito text-sm">
                <span className="text-[#24C18F]">Browse files</span> from your computer
              </p>
            </div>
          )}
        </div>
      )}
    </div>
  );
}
